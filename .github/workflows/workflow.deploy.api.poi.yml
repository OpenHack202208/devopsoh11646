name: "Deploy - api-poi (.NET Core)"

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    name: "build"
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["csharp"]

    steps:
      - name: "Check out"
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      # Gitleaks-scan
      - name: "Check for secrets with Gitleaks"
        id: gitleaks
        uses: DariuszPorowski/github-action-gitleaks@v2
        with:
          source: apis/poi
          config: gitleaksconfig.toml
          report_format: "sarif"
          fail: false
          log_level: debug

      - name: "Output from the gitleaks step"
        run: |
          echo "exitcode: ${{ steps.gitleaks.outputs.exitcode }}"
          echo "result: ${{ steps.gitleaks.outputs.result }}"
          echo "output: ${{ steps.gitleaks.outputs.output }}"
          echo "command: ${{ steps.gitleaks.outputs.command }}"
          echo "report: ${{ steps.gitleaks.outputs.report }}"

      # SARIF upload for repositories with GitHub Advanced Security
      - name: "Upload SARIF report"
        if: steps.gitleaks.outputs.exitcode == 1
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.gitleaks.outputs.report }}

      - name: "Stop workflow if secrets detected"
        if: steps.gitleaks.outputs.exitcode == 1
        run: exit 1

      #Initialize the CodeQL tools for scanning
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: "Setup .NET Core ${{ env.DOTNET_VERSION }}"
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "3.1.x"

      - name: "Restore dependencies"
        working-directory: ./apis/poi
        run: dotnet restore

      - name: "Build the App"
        working-directory: ./apis/poi
        run: dotnet build --no-restore

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: "login to Azure"
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Build and Push to ACR"
        run: |
          az acr build --image devopsoh/api-poi:${{ github.run_id }} --registry devopsoh11646cr.azurecr.io --file apis/poi/web/Dockerfile --build-arg build_version=${{ github.run_id }} apis/poi/web

  staging:
    name: "deploy to staging slot"
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: poi-production
      url: "${{ steps.deploy-to-webapp.outputs.webapp-url }}/api/version/poi"

    steps:
      - name: "login to Azure"
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "deploy to webapps"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "devopsoh11646poi"
          slot-name: staging
          images: "devopsoh11646cr.azurecr.io/devopsoh/api-poi:${{ github.run_id }}"

      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v2
        with:
          # Check the following URLs one by one sequentially
          url: "${{ steps.deploy-to-webapp.outputs.webapp-url }}/api/healthcheck/poi"
          # Follow redirects, or just report success on 3xx status codes
          follow-redirect: true # Optional, defaults to "false"
          # Fail this action after this many failed attempts
          max-attempts: 60 # Optional, defaults to 1
          # Delay between retries
          retry-delay: 5s # Optional, only applicable to max-attempts > 1
          # Retry all errors, including 404. This option might trigger curl upgrade.
          retry-all: true # Optional, defaults to "false"

  swap:
    name: "swap from staging to production"
    needs:
      - build
      - staging
    runs-on: ubuntu-latest

    steps:
      - name: "login to Azure"
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Swap
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment slot swap --resource-group devopsoh11646rg --name devopsoh11646poi --slot staging --target-slot production
